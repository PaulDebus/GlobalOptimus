var annotated_dup =
[
    [ "FUNCTIONPARSERTYPES", null, [
      [ "FuncDefinition", "structFUNCTIONPARSERTYPES_1_1FuncDefinition.html", null ]
    ] ],
    [ "ACOP", "classACOP.html", "classACOP" ],
    [ "Adam", "classAdam.html", "classAdam" ],
    [ "Armadillo1", "classArmadillo1.html", "classArmadillo1" ],
    [ "ArmijoSearch", "classArmijoSearch.html", "classArmijoSearch" ],
    [ "Bfgs", "classBfgs.html", "classBfgs" ],
    [ "Collection", "classCollection.html", "classCollection" ],
    [ "Converter", "classConverter.html", null ],
    [ "Cprogram", "classCprogram.html", "classCprogram" ],
    [ "Dataset", "classDataset.html", "classDataset" ],
    [ "DifferentialEvolution", "classDifferentialEvolution.html", "classDifferentialEvolution" ],
    [ "DoubleBox", "classDoubleBox.html", "classDoubleBox" ],
    [ "DoubleStack", "classDoubleStack.html", "classDoubleStack" ],
    [ "EditLogger", "classEditLogger.html", "classEditLogger" ],
    [ "EGO", "classEGO.html", "classEGO" ],
    [ "FcModel", "classFcModel.html", "classFcModel" ],
    [ "FcProgram", "classFcProgram.html", "classFcProgram" ],
    [ "FibonacciSearch", "classFibonacciSearch.html", "classFibonacciSearch" ],
    [ "FileLogger", "classFileLogger.html", "classFileLogger" ],
    [ "FunctionalRbf", "classFunctionalRbf.html", "classFunctionalRbf" ],
    [ "FunctionParser", "classFunctionParser.html", null ],
    [ "GdfModel", "classGdfModel.html", "classGdfModel" ],
    [ "Genetic", "classGenetic.html", "classGenetic" ],
    [ "GoldenSearch", "classGoldenSearch.html", "classGoldenSearch" ],
    [ "GradientDescent", "classGradientDescent.html", "classGradientDescent" ],
    [ "GWOoptimizer", "classGWOoptimizer.html", "classGWOoptimizer" ],
    [ "HybridMethod", "classHybridMethod.html", "classHybridMethod" ],
    [ "IntegerAnneal", "classIntegerAnneal.html", "classIntegerAnneal" ],
    [ "iPso", "classiPso.html", "classiPso" ],
    [ "jDElsgo", "classjDElsgo.html", "classjDElsgo" ],
    [ "KmeansSampler", "classKmeansSampler.html", "classKmeansSampler" ],
    [ "Lbfgs", "classLbfgs.html", "classLbfgs" ],
    [ "LineSearch", "classLineSearch.html", "classLineSearch" ],
    [ "LocalRbfProblem", "classLocalRbfProblem.html", "classLocalRbfProblem" ],
    [ "Logger", "classLogger.html", "classLogger" ],
    [ "Mapper", "classMapper.html", null ],
    [ "MaxwellSampler", "classMaxwellSampler.html", "classMaxwellSampler" ],
    [ "Mean", "classMean.html", "classMean" ],
    [ "MethodLoader", "classMethodLoader.html", "classMethodLoader" ],
    [ "Metric", "structMetric.html", null ],
    [ "MEWOA", "classMEWOA.html", "classMEWOA" ],
    [ "MlpProblem", "classMlpProblem.html", "classMlpProblem" ],
    [ "Model", "classModel.html", "classModel" ],
    [ "Multiplier", "structMultiplier.html", null ],
    [ "Multistart", "classMultistart.html", "classMultistart" ],
    [ "NelderMead", "classNelderMead.html", "classNelderMead" ],
    [ "NeuralMinimizer", "classNeuralMinimizer.html", "classNeuralMinimizer" ],
    [ "NeuralParser", "classNeuralParser.html", null ],
    [ "NeuralProblem", "classNeuralProblem.html", "classNeuralProblem" ],
    [ "NeuralSampler", "classNeuralSampler.html", "classNeuralSampler" ],
    [ "NNCModel", "classNNCModel.html", "classNNCModel" ],
    [ "NncProgram", "classNncProgram.html", null ],
    [ "Node", "structNode.html", null ],
    [ "OFAlgorithm", "classOFAlgorithm.html", "classOFAlgorithm" ],
    [ "Optimizer", "classOptimizer.html", "classOptimizer" ],
    [ "ParallelDe", "classParallelDe.html", "classParallelDe" ],
    [ "ParallelPso", "classParallelPso.html", "classParallelPso" ],
    [ "Parameter", "classParameter.html", "classParameter" ],
    [ "ParameterList", "classParameterList.html", "classParameterList" ],
    [ "Population", "classPopulation.html", "classPopulation" ],
    [ "PopulationProblem", "classPopulationProblem.html", "classPopulationProblem" ],
    [ "Problem", "classProblem.html", "classProblem" ],
    [ "ProblemLoader", "classProblemLoader.html", "classProblemLoader" ],
    [ "ProblemSampler", "classProblemSampler.html", "classProblemSampler" ],
    [ "Program", "classProgram.html", "classProgram" ],
    [ "RbfProblem", "classRbfProblem.html", "classRbfProblem" ],
    [ "RbfSampler", "classRbfSampler.html", "classRbfSampler" ],
    [ "Rule", "classRule.html", "classRule" ],
    [ "RuleModel", "classRuleModel.html", "classRuleModel" ],
    [ "RuleProgram", "classRuleProgram.html", "classRuleProgram" ],
    [ "SAOP", "classSAOP.html", "classSAOP" ],
    [ "SimanBounds", "classSimanBounds.html", null ],
    [ "SimanMethod", "classSimanMethod.html", "classSimanMethod" ],
    [ "Similarity", "classSimilarity.html", "classSimilarity" ],
    [ "Statistics", "classStatistics.html", "classStatistics" ],
    [ "Symbol", "classSymbol.html", "classSymbol" ],
    [ "TriangularSampler", "classTriangularSampler.html", "classTriangularSampler" ],
    [ "UniformSampler", "classUniformSampler.html", "classUniformSampler" ],
    [ "UserMethod", "classUserMethod.html", "classUserMethod" ],
    [ "WOA", "classWOA.html", "classWOA" ]
];